{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","handleClick","history","state","slice","stepNumber","length","calculateWinner","xIsNext","setState","concat","jumpTo","step","Array","fill","status","current","winner","moves","map","move","desc","key","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"qPAIMA,G,MAAS,SAACC,GACV,OACE,4BACAC,UAAU,SACVC,QAAS,kBAAMF,EAAME,YACpBF,EAAMG,SAKPC,E,2KACSC,GAAI,IAAD,OACd,OAAO,kBAACN,EAAD,CACPI,MAAQG,KAAKN,MAAMO,QAAQF,GAC3BH,QAAW,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAIpC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GAvBTC,IAAMC,WA8BpBC,E,kDACJ,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IASRY,YAAc,SAACP,GACb,IAAMQ,EAAU,EAAKC,MAAMD,QAAQE,MAAM,EAAG,EAAKD,MAAME,WAAa,GAE9DT,EADUM,EAAQA,EAAQI,OAAS,GACjBV,QAAQQ,QAC5BG,EAAgBX,IAAYA,EAAQF,KAGxCE,EAAQF,GAAK,EAAKS,MAAMK,QAAU,IAAM,IACxC,EAAKC,SAAS,CACZP,QAASA,EAAQQ,OAAO,CAAC,CACvBd,QAASA,KAEXS,WAAYH,EAAQI,OACpBE,SAAU,EAAKL,MAAMK,YAvBN,EAyBnBG,OAAS,SAACC,GACR,EAAKH,SAAS,CACZJ,WAAYO,EACZJ,QAAUI,EAAO,IAAO,KA1B1B,EAAKT,MAAQ,CACXD,QAAS,CAAC,CACRN,QAASiB,MAAM,GAAGC,KAAK,QAEzBN,SAAS,EACTH,WAAY,GAPG,E,qDA+BT,IAcJU,EAdG,OACDb,EAAUP,KAAKQ,MAAMD,QACrBc,EAAUd,EAAQP,KAAKQ,MAAME,YAC7BY,EAASV,EAAgBS,EAAQpB,SACjCsB,EAAQhB,EAAQiB,KAAI,SAACP,EAAMQ,GAC/B,IAAMC,EAAOD,EACK,UAAYA,EACZ,mBAClB,OACE,wBAAIE,IAAKF,GACP,4BAAQ7B,QAAS,kBAAM,EAAKoB,OAAOS,KAAQC,OAUjD,OAJEN,EADCE,EACQ,YAAcA,EAEd,gBAAkBtB,KAAKQ,MAAMK,QAAU,IAAM,KAGtD,yBAAKlB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACAG,QAASoB,EAAQpB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAKO,YAAYP,OAEnC,yBAAKJ,UAAU,aACb,6BAAOyB,GACP,4BAAKG,S,GA7DIpB,IAAMC,WAmEzB,SAASQ,EAAgBX,GAWvB,IAVA,IAAM2B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA7B,EAAI,EAAGA,EAAI6B,EAAMjB,OAAQZ,IAAK,CAAC,IAAD,cACnB6B,EAAM7B,GADa,GAC9B8B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI9B,EAAQ4B,IAAM5B,EAAQ4B,KAAO5B,EAAQ6B,IAAM7B,EAAQ4B,KAAO5B,EAAQ8B,GACpE,OAAO9B,EAAQ4B,GAGnB,OAAO,KAITG,IAASC,OACP,kBAAC5B,EAAD,MACA6B,SAASC,eAAe,W","file":"static/js/main.74e74b75.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nconst Square = (props) => {\r\n      return (\r\n        <button \r\n        className=\"square\"\r\n        onClick={() => props.onClick()}>\r\n        {props.value}\r\n        </button>\r\n      );\r\n  }\r\n  \r\n  class Board extends React.Component {\r\n    renderSquare(i) {\r\n      return <Square \r\n      value={ this.props.squares[i] } \r\n      onClick = {() => this.props.onClick(i)}/>;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        history: [{\r\n          squares: Array(9).fill(null),\r\n        }],\r\n        xIsNext: true,\r\n        stepNumber: 0\r\n      }\r\n    }\r\n    handleClick = (i) => {\r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n      if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? 'X' : 'O'\r\n      this.setState({\r\n        history: history.concat([{\r\n          squares: squares,\r\n        }]),\r\n        stepNumber: history.length,\r\n        xIsNext: !this.state.xIsNext})\r\n    }\r\n    jumpTo = (step) => {\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0,\r\n      })\r\n    }\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber]\r\n      const winner = calculateWinner(current.squares)\r\n      const moves = history.map((step, move) => {\r\n        const desc = move ? \r\n                          'go to #' + move :\r\n                          'go to game start'\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        )\r\n      })\r\n      let status;\r\n      if(winner) {\r\n        status = 'Winner is' + winner\r\n      } else {\r\n        status = 'Next player:' + (this.state.xIsNext ? 'X' : 'O');\r\n      }\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}/>\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{ status }</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}